






void  *   begin_fst_branches_lakes   ()

{





void * note_waters_sizes = that_fst_roots_lakes_bubbles_prepare;


create_fst_roots_lakes  (  & note_waters_sizes  );







/*

void *  for four byte

*/



* ( __uint64_t * ) note_waters_sizes  =  4;

create_fst_roots_lakes  (  ( void * * ) & that_fst_branches_lakes  );

resize_fst_roots_lakes  (  ( void * * ) & that_fst_branches_lakes,  note_waters_sizes  );



* ( __uint64_t * ) note_waters_sizes  =  2 * 4;

create_fst_roots_lakes  (  ( void * * ) & that_fst_branches_lakes [ 0 ]  );

resize_fst_roots_lakes  (  ( void * * ) & that_fst_branches_lakes [ 0 ],  note_waters_sizes  );








/*

char  for one byte

*/


* ( __uint64_t * ) note_waters_sizes  =  19 * 1;

create_fst_roots_lakes  (  & that_fst_branches_lakes [ 0 ] [ 0 ]  );

resize_fst_roots_lakes  (  & that_fst_branches_lakes [ 0 ] [ 0 ],  note_waters_sizes  );


/*

__uint64_t  for eight byte

*/

* ( __uint64_t * ) note_waters_sizes  =  8;

create_fst_roots_lakes  (  & that_fst_branches_lakes [ 0 ] [ 1 ]  );

resize_fst_roots_lakes  (  & that_fst_branches_lakes [ 0 ] [ 1 ],  note_waters_sizes  );









free_fst_roots_lakes  (  & note_waters_sizes  );









copy_fst_roots_lakes_stones  (  that_fst_branches_lakes  [ 0 ] [ 0 ],  ( void * ) "fst,branches,lakes"  );



*  (  __uint64_t *  )   that_fst_branches_lakes  [ 0 ] [ 1 ]   =   0;









return  that_fst_roots_lakes_bubbles_prepare;

}







