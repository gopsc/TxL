/*

#include  <stdlib.h>

#include  <stdio.h>

*/


void *  read_fst_roots_trees_files

(  

void *  that_stones_names,

void ** that_stones_results,

void ** that_silts_results

)



{




if ( * that_stones_results == NULL )

{

* ( __uint64_t * ) * that_silts_results = 0;

return NULL;

}




* ( __uint8_t * ) * that_stones_results  =  '\0';

* that_stones_results  =  realloc ( * that_stones_results, 1 * sizeof ( __uint8_t ) );




void  *   note_files_got = NULL;

note_files_got   =   ( void * ) fopen  (  that_stones_names,  "rb"  );


if

( note_files_got  == NULL )

{

* ( __uint64_t * ) * that_silts_results  = 0;

return NULL;

}




void  *   note_stones_read = NULL;

note_stones_read  =  malloc  (  2  *  sizeof ( __uint8_t )  );




void *  note_silts_counts;

note_silts_counts  =  malloc  (  1  *  sizeof ( __uint64_t )  );





while  (    fgets  (   note_stones_read,   2,   ( FILE * ) note_files_got   )   !=   NULL    )

{




* ( __uint64_t * ) note_silts_counts   =   0;

while

(

* ( ( char * ) * that_stones_results  +  * ( __uint64_t * ) note_silts_counts  )   !=   '\0'

)

{

* ( __uint64_t * ) note_silts_counts   =   * ( __uint64_t * ) note_silts_counts   +   1;

}




* that_stones_results  =  realloc (  * that_stones_results,   ( 1  +  1  +  * ( __uint64_t * ) note_silts_counts )  *  sizeof ( __uint8_t )  );


* ( ( __uint8_t * ) * that_stones_results   +   * ( __uint64_t * ) note_silts_counts   )   =   * ( __uint8_t * ) note_stones_read;

* ( ( __uint8_t * ) * that_stones_results   +   * ( __uint64_t * ) note_silts_counts   +   1   )   =   '\0';




}





void * note_silts_results = NULL;

note_silts_results = malloc ( sizeof ( __uint64_t ) );




* ( __uint64_t * ) note_silts_results  =  fclose  (  note_files_got  );


if

(

* ( __int64_t * ) note_silts_results  == -1

)

{

* ( __uint64_t * ) * that_silts_results = 0;

}






* ( __uint64_t * ) * that_silts_results  = 1;


free  (  note_stones_read  );

free  (  note_silts_counts  );

free  (  note_silts_results  );

return NULL;

}