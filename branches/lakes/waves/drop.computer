/*

#include "./../../../roots/lakes/prepare.computer"


#include "./../../../roots/lakes/waves/create.computer"

#include "./../../../roots/lakes/waves/resize.computer"

#include "./../../../roots/lakes/waves/free.computer"


#include "./../../../roots/lakes/stones/compare.computer"



#include "./../../../branches/threads/prepare.computer"


#include "./../../../branches/lakes/prepare.computer"

*/


that_fst_branches_threads_prepare_waters

drop_fst_branches_lakes_waves

(

that_fst_branches_threads_prepare_waters

that_stones_names

)

{





















that_fst_branches_threads_prepare_waters

note_silts_counts = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves  ( & note_silts_counts );





















that_fst_branches_threads_prepare_waters

note_silts_results = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves  ( & note_silts_results );




















that_fst_branches_threads_prepare_waters

note_silts_sizes = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_silts_sizes );






















that_fst_branches_threads_prepare_waters

note_silts_switches = that_fst_roots_lakes_prepare;



create_fst_roots_lakes_waves  (  & note_silts_switches  );



* ( that_fst_branches_threads_prepare_silts * ) note_silts_switches = 0;






















* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts = 1;



while

(


* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts

<=

* ( that_fst_branches_threads_prepare_silts * ) that_fst_branches_lakes_prepare [ 0 ] [ 1 ]


)

{















if  (  * ( that_fst_branches_threads_prepare_silts * ) note_silts_switches   ==   0  )

{











compare_fst_roots_lakes_stones

(

that_stones_names,

that_fst_branches_lakes_prepare [ * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts ] [ 0 ],


note_silts_results

);











if  (   * ( that_fst_branches_threads_prepare_silts * ) note_silts_results == 1 )

{










free_fst_roots_lakes_waves ( ( that_fst_branches_threads_prepare_waters * ) & that_fst_branches_lakes_prepare [ * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts ] [ 0 ] );



free_fst_roots_lakes_waves ( ( that_fst_branches_threads_prepare_waters * ) & that_fst_branches_lakes_prepare [ * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts ] [ 1 ] );





free_fst_roots_lakes_waves ( ( that_fst_branches_threads_prepare_waters * ) & that_fst_branches_lakes_prepare [ * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts ] );











that_fst_branches_lakes_prepare [ * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts ]

= that_fst_roots_lakes_prepare;












* ( that_fst_branches_threads_prepare_silts * ) note_silts_switches  =  1;

}







}
















else if ( * ( that_fst_branches_threads_prepare_silts * ) note_silts_switches == 1 )

{











that_fst_branches_lakes_prepare [ * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts - 1 ]

=

that_fst_branches_lakes_prepare [ * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts ];












that_fst_branches_lakes_prepare [ * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts ]

=

that_fst_roots_lakes_prepare;


}

















* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts

=

* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts + 1;

}




















if ( * ( that_fst_branches_threads_prepare_silts * ) note_silts_switches == 1 )

{













* ( that_fst_branches_threads_prepare_silts * ) that_fst_branches_lakes_prepare [ 0 ] [ 1 ]

=

* ( that_fst_branches_threads_prepare_silts * ) that_fst_branches_lakes_prepare [ 0 ] [ 1 ] - 1;














* ( that_fst_branches_threads_prepare_silts * ) note_silts_sizes

=

( 1 + * ( that_fst_branches_threads_prepare_silts * ) that_fst_branches_lakes_prepare  [ 0 ] [ 1 ] )

*

( * ( that_fst_branches_threads_prepare_silts * ) that_fst_branches_threads_prepare_waters_sizes );






resize_fst_roots_lakes_waves

(

( that_fst_branches_threads_prepare_waters * ) & that_fst_branches_lakes_prepare,

note_silts_sizes

);








}























free_fst_roots_lakes_waves ( & note_silts_counts );

free_fst_roots_lakes_waves ( & note_silts_results  );

free_fst_roots_lakes_waves ( & note_silts_sizes );

free_fst_roots_lakes_waves ( & note_silts_switches );
  
  
return  that_fst_roots_lakes_prepare;

}