


#include <stdlib.h>


void  *   fstRootsDataWordsAppend


(

void  *   that_words_targets,

void  *   that_words_appended

)

{



void  *   note_numbers_counts_targets;

note_numbers_counts_targets   =   malloc  (  1  *  sizeof ( __uint64_t )  );


* ( __uint64_t * ) note_numbers_counts_targets   =   0;



while  (  * ( char * ) (  that_words_targets  +  * ( __uint64_t * ) note_numbers_counts_targets  )   !=   '\0'  )

{

* ( __uint64_t * ) note_numbers_counts_targets   =   * ( __uint64_t * ) note_numbers_counts_targets   +   1;

}





void  *   note_numbers_counts_appended;

note_numbers_counts_appended   =   malloc  (  1  *  sizeof ( __uint64_t )  );



* ( __uint64_t * ) note_numbers_counts_appended   =   0;

while  (   * ( char * ) (  that_words_appended  +  * ( __uint64_t * ) note_numbers_counts_appended  )   !=   '\0'   )

{

* ( __uint64_t * ) note_numbers_counts_appended   =   * ( __uint64_t * ) note_numbers_counts_appended   +   1;



* ( char * ) (  that_words_targets  +  * ( __uint64_t * ) note_numbers_counts_targets  +  * ( __uint64_t * ) note_numbers_counts_appended  )
=
* ( char * ) (  that_words_appended  +  * ( __uint64_t * ) note_numbers_counts_appended  );

}



* ( char * ) (  that_words_targets  +  * ( __uint64_t * ) note_numbers_counts_targets  +  * ( __uint64_t * ) note_numbers_counts_appended  )   =   '\0';





return  NULL;

}











