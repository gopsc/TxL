

#include <stdlib.h>



#include "./../../../roots/threads/prepare.bases"




#ifndef added_fst_roots_lakes_stones_measure

#define added_fst_roots_lakes_stones_measure




that_fst_roots_threads_prepare_waters

measure_fst_roots_lakes_stones

(


that_fst_roots_threads_prepare_waters

that_stones_targets,


that_fst_roots_threads_prepare_waters

that_silts_results


)

{





















that_fst_roots_threads_prepare_waters

note_silts_counts = NULL;




while ( note_silts_counts == NULL )

{



note_silts_counts = malloc

( 1 *

( * ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes )

);



}




* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts = 0;






















* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts = 0;


while

(


* (

( that_fst_roots_threads_prepare_stones * ) that_stones_targets

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts

) != '\0'


)

{

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts

=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts + 1;

}






















* ( that_fst_roots_threads_prepare_silts * ) that_silts_results

=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts;



















* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts = 0;




if ( note_silts_counts != NULL )

{


free  (  note_silts_counts  );


}






















return  NULL;

}




#endif

