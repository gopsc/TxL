/*

#include <stdlib.h>

#include <stdio.h>



#include "./../../../roots/threads/prepare.computer"

*/


that_fst_roots_threads_prepare_waters

read_fst_roots_trees_files

(  

that_fst_roots_threads_prepare_waters

that_stones_names,


that_fst_roots_threads_prepare_waters

* that_stones_results,


that_fst_roots_threads_prepare_waters

that_silts_results

)

{


















that_fst_roots_threads_prepare_waters

note_waters_resized = NULL;


















if ( * that_stones_results == NULL )

{




note_waters_resized = NULL;


while ( note_waters_resized == NULL )

{



note_waters_resized = malloc

( 1 *

( * ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_stones_sizes )

);



}




* that_stones_results = note_waters_resized;



}





















note_waters_resized = NULL;



while ( note_waters_resized == NULL )

{



note_waters_resized = realloc

(



* that_stones_results,


1 * (

* ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_stones_sizes

)



);



}





* that_stones_results = note_waters_resized;























* ( that_fst_roots_threads_prepare_stones * ) * that_stones_results = '\0';






























that_fst_roots_threads_prepare_waters

note_files_got = NULL;





note_files_got = ( that_fst_roots_threads_prepare_waters ) fopen ( that_stones_names, "rb" );





if

( note_files_got  == NULL )

{

* ( that_fst_roots_threads_prepare_silts * ) that_silts_results  = 0;


return NULL;

}





















that_fst_roots_threads_prepare_waters

note_stones_read = NULL;




while ( note_stones_read == NULL )

{



note_stones_read = malloc

( 2 *

* ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_stones_sizes

);



}



* ( that_fst_roots_threads_prepare_stones * ) note_stones_read = '\0';






















that_fst_roots_threads_prepare_waters

note_silts_counts = NULL;




while ( note_silts_counts == NULL )

{



note_silts_counts  =  malloc

( 1 *

* ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes

);



}





















while

(

fgets ( note_stones_read, 2, ( FILE * ) note_files_got )

!= NULL

)

{










* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts = 0;

while

(


* (

( that_fst_roots_threads_prepare_stones * ) * that_stones_results

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts

) != '\0'


)

{

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts

=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts + 1;

}












note_waters_resized = NULL;




while ( note_waters_resized == NULL )

{



note_waters_resized = realloc

(


* that_stones_results,


( 1 + 1 + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )

*

( * ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_stones_sizes )


);



}




* that_stones_results = note_waters_resized;









* (

( that_fst_roots_threads_prepare_stones * ) * that_stones_results

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts

)

=

* ( that_fst_roots_threads_prepare_stones * ) note_stones_read;







* (

( that_fst_roots_threads_prepare_stones * ) * that_stones_results

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts + 1

)

= '\0';




}


















* ( that_fst_roots_threads_prepare_silts * ) that_silts_results  = 1;





















that_fst_roots_threads_prepare_waters

note_silts_results = NULL;




while ( note_silts_results == NULL )

{



note_silts_results = malloc

( 1 *

* ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes

);



}





















* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = fclose ( note_files_got );








if ( * ( that_fst_roots_threads_prepare_silts * ) note_silts_results  == -1 )

{

* ( that_fst_roots_threads_prepare_silts * ) that_silts_results = 0;

}




















free  (  note_stones_read  );

free  (  note_silts_counts  );

free  (  note_silts_results  );


return NULL;

}