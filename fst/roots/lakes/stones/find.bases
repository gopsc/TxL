

#include <stdlib.h>




#ifndef added_fst_roots_lakes_stones_find

#define added_fst_roots_lakes_stones_find




void * find_fst_roots_lakes_stones

(

void * that_stones_targets,

void * that_stones_found,

void * * that_waters_results

)

{

























if (  ( void * ) ( void * * ) that_waters_results  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}
















if (  ( void * ) that_stones_targets  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}









if (  ( void * ) that_stones_found  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}









if (  ( void * ) * ( void * * ) that_waters_results  !=  ( void * ) NULL  )

{

return  ( void * ) NULL;

}

























void * note_silts_lengths_targets  =  ( void * ) NULL;









while (  ( void * ) note_silts_lengths_targets  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_lengths_targets   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_targets   =   ( int ) 0;
















void * note_silts_lengths_found  =  ( void * ) NULL;









while (  ( void * ) note_silts_lengths_found  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_lengths_found   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_found   =   ( int ) 0;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_targets   =   ( int ) 0;









while

(




( char ) * ( char * )


(


( char * ) ( void * ) that_stones_targets


+


( int ) * ( int * ) ( void * ) note_silts_lengths_targets


)




!=




( char ) '\0'




)

{



/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_targets


=


( int ) * ( int * ) ( void * ) note_silts_lengths_targets


+


( int ) 1;



}
















/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_found   =   ( int ) 0;









while

(




( char ) * ( char * )


(


( char * ) ( void * ) that_stones_found


+


( int ) * ( int * ) ( void * ) note_silts_lengths_found


)




!=




( char ) '\0'




)

{



/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_found


=


( int ) * ( int * ) ( void * ) note_silts_lengths_found


+


( int ) 1;



}

























if

(


( int ) * ( int * ) ( void * ) note_silts_lengths_targets


<


( int ) * ( int * ) ( void * ) note_silts_lengths_found


)

{

























/* ( void * ) */  * ( void * * ) that_waters_results   =   ( void * ) NULL;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_targets   =   ( int ) 0;









if (  ( void * ) note_silts_lengths_targets  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_lengths_targets  );

}









/* ( void * ) */  note_silts_lengths_targets  =  ( void * ) NULL;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_found   =   ( int ) 0;









if (  ( void * ) note_silts_lengths_found  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_lengths_found  );

}









/* ( void * ) */  note_silts_lengths_found  =  ( void * ) NULL;

























return  ( void * ) NULL;









}

























void * note_silts_counts_targets  =  ( void * ) NULL;









while (   ( void * ) note_silts_counts_targets  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_counts_targets   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_targets   =   ( int ) 0;
















void * note_silts_counts_found  =  ( void * ) NULL;









while (  ( void * ) note_silts_counts_found  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_counts_found   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_found   =   ( int ) 0;
















void * note_silts_switches  =  ( void * ) NULL;









while (  ( void * ) note_silts_switches  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_switches   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * ) ( void * )  note_silts_switches   =   ( int ) 0;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_targets   =   ( int ) 0;









/* ( int ) */  * ( int * ) ( void * )  note_silts_switches   =   ( int ) 0;









while

(


( int ) * ( int * ) ( void * )  note_silts_counts_targets


<


( int ) * ( int * ) ( void * )  note_silts_lengths_targets


)

{

























/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_found   =   ( int ) 0;









while

(


( int ) * ( int * ) ( void * ) note_silts_counts_found


<


( int ) * ( int * ) ( void * ) note_silts_lengths_found


)

{

























if

(




( char ) * ( char * )


(


( char * ) ( void * ) that_stones_targets


+


( int ) * ( int * ) ( void * ) note_silts_counts_targets


+


( int ) * ( int * ) ( void * ) note_silts_counts_found


)




!=




( char ) * ( char * )


(


( char * ) ( void * ) that_stones_found


+


( int ) * ( int * ) ( void * ) note_silts_counts_found


)




)

{

























/* ( int ) */  * ( int * ) ( void * )  note_silts_switches   =   ( int ) 0;

























break;









}
















else if

(




( char ) * ( char * )


(


( char * ) ( void * ) that_stones_targets


+


( int ) * ( int * ) ( void * ) note_silts_counts_targets


+


( int ) * ( int * ) ( void * ) note_silts_counts_found


)




==




( char ) * ( char * )


(


( char * ) ( void * ) that_stones_found


+


( int ) * ( int * ) ( void * ) note_silts_counts_found


)




)

{

























/* ( int ) */  * ( int * ) ( void * )  note_silts_switches   =   ( int ) 1;
















}

























/* ( int ) */ * ( int * ) ( void * )  note_silts_counts_found


=


( int ) * ( int * ) ( void * )  note_silts_counts_found


+


( int ) 1;









}









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_found   =   ( int ) 0;

























if (  ( int ) * ( int * ) ( void * )  note_silts_switches   ==   ( int ) 1  )

{

























/* ( void * ) */  * ( void * * )  that_waters_results


=


( char * ) ( void * ) that_stones_targets


+


( int ) * ( int * ) ( void * )  note_silts_counts_targets;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_targets   =   ( int ) 0;









if (  ( void * ) note_silts_lengths_targets  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_lengths_targets  );

}









/* ( void * ) */ note_silts_lengths_targets  =  ( void * ) NULL;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_found   =   ( int ) 0;









if (  ( void * ) note_silts_lengths_found  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_lengths_found  );

}









/* ( void * ) */ note_silts_lengths_found  =  ( void * ) NULL;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_targets   =   ( int ) 0;









if (  ( void * ) note_silts_counts_targets  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_counts_targets  );

}









/* ( void * ) */ note_silts_counts_targets  =  ( void * ) NULL;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_found   =   ( int ) 0;









if (  ( void * ) note_silts_counts_found  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_counts_found  );

}









/* ( void * ) */  note_silts_counts_found  =  ( void * ) NULL;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_switches   =   ( int ) 0;









if (  ( void * ) note_silts_switches  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_switches  );

}









/* ( void * ) */  note_silts_switches  =  ( void * ) NULL;

























return  ( void * ) NULL;









}

























/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_targets


=


( int ) * ( int * ) ( void * )  note_silts_counts_targets


+


( int ) 1;









}









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_targets   =   ( int ) 0;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_targets   =   ( int ) 0;









/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_found   =   ( int ) 0;









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_targets   =   ( int ) 0;









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_found   =   ( int ) 0;









/* ( int ) */  * ( int * ) ( void * )  note_silts_switches   =   ( int ) 0;


























/* ( void * ) */  * ( void * * )  that_waters_results   =   ( void * ) NULL;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_targets   =   ( int ) 0;









if (  ( void * ) note_silts_lengths_targets  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_lengths_targets  );

}









/* ( void * ) */ note_silts_lengths_targets  =  ( void * ) NULL;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_lengths_found   =   ( int ) 0;









if (  ( void * ) note_silts_lengths_found  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_lengths_found  );

}









/* ( void * ) */ note_silts_lengths_found  =  ( void * ) NULL;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_targets   =   ( int ) 0;









if (  ( void * ) note_silts_counts_targets  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_counts_targets  );

}









/* ( void * ) */ note_silts_counts_targets  =  ( void * ) NULL;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_counts_found   =   ( int ) 0;









if (  ( void * ) note_silts_counts_found  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_counts_found  );

}









/* ( void * ) */  note_silts_counts_found  =  ( void * ) NULL;
















/* ( int ) */  * ( int * ) ( void * )  note_silts_switches   =   ( int ) 0;









if (  ( void * ) note_silts_switches  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_switches  );

}









/* ( void * ) */  note_silts_switches  =  ( void * ) NULL;

























return  ( void * ) NULL;









}




#endif

