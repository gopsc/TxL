/*

#include  <stdlib.h>



#include "./../../../roots/threads/prepare.computer"

*/


that_fst_roots_threads_prepare_waters

copy_fst_roots_lakes_stones


(

that_fst_roots_threads_prepare_waters

that_stones_targets,


that_fst_roots_threads_prepare_waters

that_stones_copied

)

{







that_fst_roots_threads_prepare_waters

note_silts_counts = NULL;



while ( note_silts_counts == NULL )

{



note_silts_counts = malloc

( 1 *

( * ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes )

);


}









* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts = 0;

while

(


* (


( that_fst_roots_threads_prepare_stones * ) that_stones_copied

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts


) != '\0'


)

{







* (

( that_fst_roots_threads_prepare_stones * ) that_stones_targets

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts

)


=


* (

( that_fst_roots_threads_prepare_stones * ) that_stones_copied

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts

);








* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts

=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts + 1;


}










* (

( that_fst_roots_threads_prepare_stones * ) that_stones_targets 

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts

) = '\0';










free ( note_silts_counts );


return NULL;

}