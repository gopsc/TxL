

#include "./../../../roots/threads/prepare.bases"


#include "./../../../roots/lakes/prepare.bases"


#include "./../../../roots/lakes/waves/create.bases"

#include "./../../../roots/lakes/waves/resize.bases"

#include "./../../../roots/lakes/waves/free.bases"


#include "./../../../roots/trees/files/is.linuxes"

#include "./../../../roots/trees/files/read.computers"



#include "./../../../branches/lakes/waves/add.bases"

#include "./../../../branches/lakes/waves/fish.bases"




#ifndef added_fst_branches_trees_files_get

#define added_fst_branches_trees_files_get




that_fst_roots_threads_prepare_waters

get_fst_branches_trees_files

(



that_fst_roots_threads_prepare_waters

that_waters_lakes_stones_files,


that_fst_roots_threads_prepare_waters

that_stones_names_files,



that_fst_roots_threads_prepare_waters *

that_waters_lakes_stones_results,


that_fst_roots_threads_prepare_waters

that_stones_names_results,



that_fst_roots_threads_prepare_waters

that_waters_lakes_lights,


that_fst_roots_threads_prepare_waters *

that_waters_results


)

{

























if

(


( that_fst_roots_threads_prepare_waters )

that_waters_lakes_stones_results


==


that_fst_roots_lakes_prepare


)

{




return that_fst_roots_lakes_prepare;



}









if

(


( that_fst_roots_threads_prepare_waters )

that_waters_results


==


that_fst_roots_lakes_prepare


)

{




return that_fst_roots_lakes_prepare;



}
















if ( that_waters_lakes_stones_files == that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}









if ( that_stones_names_files == that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}









if ( * that_waters_lakes_stones_results == that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}









if ( that_stones_names_results == that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}









if ( that_waters_lakes_lights == that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}









if ( * that_waters_results != that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}

























that_fst_roots_threads_prepare_waters

note_waters_names = that_fst_roots_lakes_prepare;









that_fst_roots_threads_prepare_waters

note_waters_lakes = that_fst_roots_lakes_prepare;









that_fst_roots_threads_prepare_waters

note_waters_fish = that_fst_roots_lakes_prepare;

























note_waters_names = that_fst_roots_lakes_prepare;









fish_fst_branches_lakes_waves

(



( that_fst_roots_threads_prepare_waters )

that_waters_lakes_stones_files,


( that_fst_roots_threads_prepare_waters )

that_stones_names_files,



( that_fst_roots_threads_prepare_waters * )

& note_waters_names



);









if ( note_waters_names == that_fst_roots_lakes_prepare )

{




note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



note_waters_fish = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;



}

























note_waters_fish = that_fst_roots_lakes_prepare;









fish_fst_branches_lakes_waves

(



( that_fst_roots_threads_prepare_waters )

that_waters_lakes_lights,


( that_fst_roots_threads_prepare_waters )

"fst,branches,lakes,bubbles,begin",



( that_fst_roots_threads_prepare_waters * )

& note_waters_fish



);









if ( note_waters_fish == that_fst_roots_lakes_prepare )

{




note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



note_waters_fish = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;



}









note_waters_lakes = that_fst_roots_lakes_prepare;




note_waters_fish

=

* ( that_fst_roots_threads_prepare_waters * )

note_waters_fish;




note_waters_lakes = note_waters_fish;




note_waters_fish = that_fst_roots_lakes_prepare;
















note_waters_fish = that_fst_roots_lakes_prepare;









fish_fst_branches_lakes_waves

(



( that_fst_roots_threads_prepare_waters )

note_waters_lakes,


( that_fst_roots_threads_prepare_waters )

"fst,branches,lakes,bubbles,lights,begin",



( that_fst_roots_threads_prepare_waters * )

& note_waters_fish



);









if ( note_waters_fish == that_fst_roots_lakes_prepare )

{




note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



note_waters_fish = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;



}









note_waters_lakes = that_fst_roots_lakes_prepare;




note_waters_fish

=

* ( that_fst_roots_threads_prepare_waters * )

note_waters_fish;




note_waters_lakes = note_waters_fish;




note_waters_fish = that_fst_roots_lakes_prepare;

























that_fst_roots_threads_prepare_waters

note_silts_sizes = that_fst_roots_lakes_prepare;









create_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

& note_silts_sizes


);









* ( that_fst_roots_threads_prepare_silts * )

note_silts_sizes = 0;
















* ( that_fst_roots_threads_prepare_silts * )

note_silts_sizes


= 



( 1 *


* ( that_fst_roots_threads_prepare_silts * )

that_fst_roots_threads_prepare_stones_sizes


);
















that_fst_roots_threads_prepare_waters

note_stones_results = that_fst_roots_lakes_prepare;









create_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

& note_stones_results


);









* ( that_fst_roots_threads_prepare_silts * )

note_stones_results = 0;
















resize_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

& note_stones_results,


( that_fst_roots_threads_prepare_waters )

note_silts_sizes


);









copy_fst_roots_lakes_stones

(


( that_fst_roots_threads_prepare_waters )

note_stones_results,


( that_fst_roots_threads_prepare_waters )

""


);
















* ( that_fst_roots_threads_prepare_silts * )

note_silts_sizes = 0;









free_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

& note_silts_sizes


);









note_silts_sizes = that_fst_roots_lakes_prepare;

























that_fst_roots_threads_prepare_waters

note_silts_results = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_silts_results );

* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;




















* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;



is_fst_roots_trees_files ( note_waters_names, note_silts_results );





if ( * ( that_fst_roots_threads_prepare_silts * ) note_silts_results == 1 )

{











* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;



read_fst_roots_trees_files 

(

note_waters_names,

& note_stones_results,

note_silts_results

);





if ( * ( that_fst_roots_threads_prepare_silts * ) note_silts_results == 1 )

{











add_fst_branches_lakes_waves

(



that_waters_lakes_stones_results,


( that_fst_roots_threads_prepare_waters )

"stones",



that_stones_names_results,


note_stones_results



);











fish_fst_branches_lakes_waves

(


note_waters_lakes,


( that_fst_roots_threads_prepare_waters ) "yes",

that_waters_results


);










note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



copy_fst_roots_lakes_stones ( note_stones_results, ( that_fst_roots_threads_prepare_waters ) "" );

free_fst_roots_lakes_waves ( & note_stones_results );

note_stones_results = that_fst_roots_lakes_prepare;



* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;

free_fst_roots_lakes_waves ( & note_silts_results );

note_silts_results = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;


}

}



















add_fst_branches_lakes_waves

(



that_waters_lakes_stones_results,


( that_fst_roots_threads_prepare_waters )

"stones",



that_stones_names_results,


( that_fst_roots_threads_prepare_waters )

""



);
















fish_fst_branches_lakes_waves

(


note_waters_lakes,


( that_fst_roots_threads_prepare_waters ) "no",

that_waters_results


);













note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



copy_fst_roots_lakes_stones ( note_stones_results, ( that_fst_roots_threads_prepare_waters ) "" );

free_fst_roots_lakes_waves ( & note_stones_results );

note_stones_results = that_fst_roots_lakes_prepare;



* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;

free_fst_roots_lakes_waves ( & note_silts_results );

note_silts_results = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;


}




#endif

