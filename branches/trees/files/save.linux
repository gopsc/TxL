/*

#include "./../../../roots/lakes/prepare.computer"


#include "./../../../roots/lakes/waves/create.computer"

#include "./../../../roots/lakes/waves/resize.computer"

#include "./../../../roots/lakes/waves/free.computer"


#include "./../../../roots/lakes/stones/copy.computer"

#include "./../../../roots/lakes/stones/measure.computer"

#include "./../../../roots/lakes/stones/find.computer"


#include "./../../../roots/trees/dirents/is.linux"

#include "./../../../roots/trees/dirents/create.linux"



#include "./../../../branches/threads/prepare.computer"


#include "./../../../branches/lakes/waves/write.computer"

#include "./../../../branches/lakes/waves/fish.computer"

*/


that_fst_branches_threads_prepare_waters

save_fst_branches_trees_files

(

that_fst_branches_threads_prepare_waters

that_stones_names_files,


that_fst_branches_threads_prepare_waters

that_stones_names_contents,


that_fst_branches_threads_prepare_waters

* that_waters_results

)
                     
{



















that_fst_branches_threads_prepare_waters

note_waters_names_files = that_fst_roots_lakes_prepare;


fish_fst_branches_lakes_waves ( that_stones_names_files, & note_waters_names_files );























that_fst_branches_threads_prepare_waters

note_waters_names_contents = that_fst_roots_lakes_prepare;


fish_fst_branches_lakes_waves ( that_stones_names_contents, & note_waters_names_contents );























that_fst_branches_threads_prepare_waters

note_silts_counts = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_silts_counts );























that_fst_branches_threads_prepare_waters

note_silts_counts_two = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_silts_counts_two );   























that_fst_branches_threads_prepare_waters

note_silts_sizes = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_silts_sizes );




measure_fst_roots_lakes_stones ( note_waters_names_files, note_silts_sizes );




* ( that_fst_branches_threads_prepare_silts * ) note_silts_sizes

=

( 1 + * ( that_fst_branches_threads_prepare_silts * ) note_silts_sizes )

*

( * ( that_fst_branches_threads_prepare_silts * ) that_fst_branches_threads_prepare_stones_sizes );




that_fst_branches_threads_prepare_waters

note_stones_names = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_stones_names );

resize_fst_roots_lakes_waves ( & note_stones_names, note_silts_sizes );



free_fst_roots_lakes_waves ( & note_silts_sizes );






















that_fst_branches_threads_prepare_waters

note_waters_names = that_fst_roots_lakes_prepare;





















that_fst_branches_threads_prepare_waters

note_silts_results = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_silts_results );























/*

that_words_name       /.../.../...

note_numbers_count     1   2  ...

note_words_name        /...  /...

*/








* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts = 1;



while ( * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts != 0 )

{













copy_fst_roots_lakes_stones  ( note_stones_names,  note_waters_names_files );







note_waters_names = note_stones_names;















* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts_two = 0;

while

(


* ( that_fst_branches_threads_prepare_silts* ) note_silts_counts_two

<

* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts


)

{













find_fst_roots_lakes_stones
   
(

( that_fst_branches_threads_prepare_waters ) ( ( that_fst_branches_threads_prepare_stones * ) note_waters_names + 1 ),
   
( that_fst_branches_threads_prepare_waters ) "/",


& note_waters_names

);












if ( note_waters_names == that_fst_roots_lakes_prepare )

{

* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts   =   0;

}











* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts_two

=

* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts_two + 1;

}



















if ( * ( that_fst_branches_threads_prepare_silts * ) note_silts_counts != 0 )

{












   
* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts

=

* ( that_fst_branches_threads_prepare_silts * ) note_silts_counts + 1;














copy_fst_roots_lakes_stones ( note_waters_names, ( that_fst_branches_threads_prepare_waters ) "\0" );















   
is_fst_roots_trees_dirents ( note_stones_names, note_silts_results );
















if ( * ( that_fst_branches_threads_prepare_silts * ) note_silts_results == 0 )

{











create_fst_roots_trees_dirents ( note_stones_names, note_silts_results );












if ( * ( that_fst_branches_threads_prepare_silts * ) note_silts_results == 0 )

{










fish_fst_branches_lakes_waves

(

( that_fst_branches_threads_prepare_waters ) "fst,branches,lakes,bubbles,no",

that_waters_results

);









free_fst_roots_lakes_waves ( & note_stones_names );

free_fst_roots_lakes_waves ( & note_silts_counts );

free_fst_roots_lakes_waves ( & note_silts_counts_two );

free_fst_roots_lakes_waves ( & note_silts_results );


return that_fst_roots_lakes_prepare;

}

}











}








}



free_fst_roots_lakes_waves ( & note_stones_names );

free_fst_roots_lakes_waves ( & note_silts_counts );

free_fst_roots_lakes_waves ( & note_silts_counts_two );
























is_fst_roots_trees_dirents

(

note_waters_names_files,

note_silts_results

);




















if ( * ( that_fst_branches_threads_prepare_silts * ) note_silts_results == 0 )

{














write_fst_roots_trees_files

(

note_waters_names_files,

note_waters_names_contents,

note_silts_results

);















if (  * ( that_fst_branches_threads_prepare_silts * ) note_silts_results   ==   1  )

{









fish_fst_branches_lakes_waves

(

( that_fst_branches_threads_prepare_waters ) "fst,branches,lakes,bubbles,yes",

that_waters_results

);








free_fst_roots_lakes_waves ( & note_silts_results );


return  that_fst_roots_lakes_prepare;

}

}























fish_fst_branches_lakes_waves

(

( that_fst_branches_threads_prepare_waters ) "fst,branches,lakes,bubbles,no",

that_waters_results

);









free_fst_roots_lakes_waves ( & note_silts_results );


return  that_fst_roots_lakes_prepare;

}