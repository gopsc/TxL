




void *  end_fst_branches_lake ()

{



void *  note_numbers_counts;

create_fst_roots_data  (  & note_numbers_counts  );



* ( __uint64_t * ) note_numbers_counts   =  1;

while

(

* ( __uint64_t * ) note_numbers_counts  <=  * ( __uint64_t * ) that_fst_branches_lake  [ 0 ] [ 1 ]

)

{

free_fst_roots_data   (  ( void * * ) & that_fst_branches_lake  [  * ( __uint64_t * ) note_numbers_counts  ] [ 0 ] );

free_fst_roots_data   (  ( void * * ) & that_fst_branches_lake  [  * ( __uint64_t * ) note_numbers_counts  ] [ 1 ] );

free_fst_roots_data   (  ( void * * ) & that_fst_branches_lake  [  * ( __uint64_t * ) note_numbers_counts  ]  );


* ( __uint64_t * ) note_numbers_counts   =  * ( __uint64_t * ) that_fst_branches_lake   +   1;

}


free_fst_roots_data  (  & note_numbers_counts );




free_fst_roots_data  (  & that_fst_branches_lake  [ 0 ] [ 1 ]  );

free_fst_roots_data  (  & that_fst_branches_lake  [ 0 ] [ 0 ]  );

free_fst_roots_data  (  ( void * * ) & that_fst_branches_lake  [ 0 ]  );

free_fst_roots_data  (  ( void * * ) & that_fst_branches_lake  );



that_fst_branches_lake  =  NULL;




return  that_fst_branches_lake;

}
