






void  *   begin_fst_branches_lakes   ()

{





void * note_numbers_sizes;

create_fst_roots_lakes  (  & note_numbers_sizes  );



/*

void *  for eight byte

*/



* ( __uint64_t * ) note_numbers_sizes  =  8;

create_fst_roots_lakes  (  ( void * * ) & that_fst_branches_lakes  );

resize_fst_roots_lakes  (  ( void * * ) & that_fst_branches_lakes,  note_numbers_sizes  );



* ( __uint64_t * ) note_numbers_sizes  =  2 * 8;

create_fst_roots_lakes  (  ( void * * ) & that_fst_branches_lakes [ 0 ]  );

resize_fst_roots_lakes  (  ( void * * ) & that_fst_branches_lakes [ 0 ],  note_numbers_sizes  );



* ( __uint64_t * ) note_numbers_sizes  =  18 * 1;

create_fst_roots_lakes  (  & that_fst_branches_lakes [ 0 ] [ 0 ]  );

resize_fst_roots_lakes  (  & that_fst_branches_lakes [ 0 ] [ 0 ],  note_numbers_sizes  );



* ( __uint64_t * ) note_numbers_sizes  =  8;

create_fst_roots_lakes  (  & that_fst_branches_lakes [ 0 ] [ 1 ]  );

resize_fst_roots_lakes  (  & that_fst_branches_lakes [ 0 ] [ 1 ],  note_numbers_sizes  );




free_fst_roots_lakes  (  & note_numbers_sizes  );




copy_fst_roots_lakes_words  (  that_fst_branches_lakes  [ 0 ] [ 0 ],  ( void * ) "fst,branches,lakes"  );

*  (  __uint64_t *  )   that_fst_branches_lakes  [ 0 ] [ 1 ]   =   0;





return  that_fst_branches_lakes;

}







