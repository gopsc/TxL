

#include <stdlib.h>

#include <sys/stat.h>




#ifndef added_fst_roots_trees_files_is

#define added_fst_roots_trees_files_is




void * is_fst_roots_trees_files

(

void * that_stones_names,

void * that_silts_results

)

{

























if (  ( void * ) that_stones_names  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}









if (  ( void * ) that_silts_results  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}
















if (  ( int ) * ( int * ) ( void * ) that_silts_results  !=  ( int ) 0  )

{

return  ( void * ) NULL;

}

























void * note_silts_counts  =  ( void * ) NULL;









while (  ( void * ) note_silts_counts  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_counts   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts   =   ( int ) 0;

























void * note_structures_status  =  ( void * ) NULL;









while (  ( void * ) note_structures_status  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_structures_status   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( struct stat )   );

}
















/* ( int ) */  * ( int * ) ( void * )  note_silts_counts   =   ( int ) 0;









while

(

( int ) * ( int * ) ( void * ) note_silts_counts

<

( int ) ( unsigned int ) sizeof ( struct stat )

)

{

























/* ( char ) */  * ( char * )

(

( char * ) ( void * ) note_structures_status

+

( int ) ( int * ) ( void * ) note_silts_counts

)


=


( char ) 0;

























/* ( int ) */  * ( int * ) ( void * ) note_silts_counts

=

( int ) * ( int * ) ( void * ) note_silts_counts

+

( int ) 1;









}









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts   =   ( int ) 0;

























if (


( int ) lstat (


( void * ) that_stones_names,

( void * ) note_structures_status


)  ==  ( int ) 0


)

{
   
























if

(


( int ) S_ISREG (


(   ( struct stat ) * ( struct stat * ) ( void * ) note_structures_status )  .  st_mode


)  !=  ( int ) 0


)

{

























/* ( int ) */  * ( int * ) ( void * )  that_silts_results   =   ( int ) 1;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_counts   =   ( int ) 0;









while

(

( int ) * ( int * ) ( void * ) note_silts_counts

<

( int ) ( unsigned int ) sizeof ( struct stat )

)

{

























/* ( char ) */  * ( char * )

(

( char * ) ( void * ) note_structures_status

+

( int ) * ( int * ) ( void * ) note_silts_counts

)


=


( char ) 0;

























/* ( int ) */  * ( int * ) ( void * ) note_silts_counts

=

( int ) * ( int * ) ( void * ) note_silts_counts

+

( int ) 1;









}









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts   =   ( int ) 0;
















if (  ( void * ) note_structures_status  !=  ( void * ) NULL  )

{

free (  ( void * ) note_structures_status  );

}









/* ( void * ) */  note_structures_status  =  ( void * ) NULL;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_counts   =   ( int ) 0;









if (  ( void * ) note_silts_counts  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_counts  );

}









/* ( void * ) */  note_silts_counts  =  ( void * ) NULL;

























return  ( void * ) NULL;









}



}

























/* ( int ) */  * ( int * ) ( void * )  that_silts_results   =   ( int ) 0;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_counts   =   ( int ) 0;









while

(

( int ) * ( int * ) ( void * ) note_silts_counts

<

( int ) ( unsigned int ) sizeof ( struct stat )

)

{

























/* ( char ) */  * ( char * )

(

( char * ) ( void * ) note_structures_status

+

( int ) * ( int * ) ( void * ) note_silts_counts

)


=


( char ) 0;

























/* ( int ) */  * ( int * ) ( void * ) note_silts_counts

=

( int ) * ( int * ) ( void * ) note_silts_counts

+

( int ) 1;









}









/* ( int ) */  * ( int * ) ( void * )  note_silts_counts   =   ( int ) 0;
















if (  ( void * ) note_structures_status  !=  ( void * ) NULL  )

{

free (  ( void * ) note_structures_status  );

}









/* ( void * ) */  note_structures_status  =  ( void * ) NULL;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_counts   =   ( int ) 0;









if (  ( void * ) note_silts_counts  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_counts  );

}









/* ( void * ) */  note_silts_counts  =  ( void * ) NULL;

























return  ( void * ) NULL;









}




#endif

