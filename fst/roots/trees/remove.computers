

#include  <stdlib.h>

#include  <stdio.h>




#ifndef added_fst_roots_trees_remove

#define added_fst_roots_trees_remove




void * remove_fst_roots_trees

(

void * that_stones_names,

void * that_silts_results

)

{

























if (  ( void * ) that_stones_names  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}









if (  ( void * ) that_silts_results  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}
















if (  ( int ) * ( int * ) ( void * ) that_silts_results  !=  ( int ) 0  )

{

return  ( void * ) NULL;

}

























void * note_silts_results  =  ( void * ) NULL;









while (  ( void * ) note_silts_results  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_results   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * ) ( void * )  note_silts_results   =   ( int ) 0;

























/* ( int ) */  * ( int * ) ( void * )  note_silts_results   =   ( int ) remove (  ( void * ) that_stones_names  );
















if (   ( int ) * ( int * ) ( void * )  note_silts_results   ==   ( int ) -1   )

{

/* ( int ) */  * ( int * ) ( void * )  that_silts_results   =   ( int ) 0;

}









else if (   ( int ) * ( int * ) ( void * )  note_silts_results   ==   ( int ) 0   )

{

/* ( int ) */  * ( int * ) ( void * )  that_silts_results   =   ( int ) 1;

}

























/* ( int ) */  * ( int * ) ( void * )  note_silts_results   =   ( int ) 0;









if (  ( void * ) note_silts_results  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_results  );

}









/* ( void * ) */  note_silts_results  =  ( void * ) NULL;

























return  ( void * ) NULL;









}




#endif

