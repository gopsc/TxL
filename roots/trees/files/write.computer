/*

#include  <stdlib.h>

#include  <stdio.h>

*/


void *  write_fst_roots_trees_files

(

void *  that_stones_names,

void *  that_stones_contents,

void ** that_silts_results

)

{





void  *   note_files_saved = NULL;

note_files_saved  =  fopen  (  that_stones_names,  "w"  );


if ( note_files_saved == NULL )

{

* ( __uint64_t * ) * that_silts_results = 0;

return NULL;

}





void * note_silts_lengths_contents = NULL;

note_silts_lengths_contents  =  malloc ( 1 * sizeof ( __uint64_t ) );



* ( __uint64_t * ) note_silts_lengths_contents  =  0;

while

(

* ( ( char * ) that_stones_contents + * ( __uint64_t * ) note_silts_lengths_contents )  !=  '\0'

)

{

* ( __uint64_t * ) note_silts_lengths_contents = * ( __uint64_t * ) note_silts_lengths_contents + 1;

}





void * note_silts_results = NULL;

note_silts_results  =  malloc ( 1 * sizeof ( __int64_t ) );





* ( __uint64_t * ) note_silts_results  =  fprintf  (  note_files_saved,  "%s",  that_stones_contents  );





if

(

* ( __uint64_t * ) note_silts_results  == * ( __uint64_t * ) note_silts_lengths_contents

)

{

* ( __uint64_t * ) * that_silts_results = 1;

}





else if

(

* ( __uint64_t * ) note_silts_results  != * ( __uint64_t * ) note_silts_lengths_contents

)

{

* ( __uint64_t * ) * that_silts_results = 0;

}





* ( __int64_t * ) note_silts_results  = fclose  (  note_files_saved  );





if ( * ( __int64_t * ) note_silts_results  == -1 )

{

* ( __uint64_t * ) * that_silts_results = 0;

}





free ( note_silts_lengths_contents );

free ( note_silts_results );

return  NULL;

}