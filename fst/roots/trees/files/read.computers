

#include <stdlib.h>

#include <stdio.h>




#ifndef added_fst_roots_trees_files_read

#define added_fst_roots_trees_files_read




void * read_fst_roots_trees_files

(  

void * that_stones_names,

void * * that_stones_results,

void * that_silts_results

)

{

























if (  ( void * ) ( void * * ) that_stones_results  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}
















if (  ( void * ) that_stones_names  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}









if (  ( void * ) * ( void * * ) that_stones_results  !=  ( void * ) NULL  )

{

return  ( void * ) NULL;

}









if (  ( void * ) that_silts_results  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}

















if (  ( int ) * ( int * ) ( void * ) that_silts_results  !=  ( int ) 0  )

{

return  ( void * ) NULL;

}

























void * note_files_got  =  ( void * ) NULL;









void * note_waters_resized  =  ( void * ) NULL;









void * note_stones_read  =  ( void * ) NULL;









void * note_silts_counts  =  ( void * ) NULL;

























/* ( void * ) */  note_files_got  =  ( void * ) NULL;









/* ( void * ) */  note_files_got

=

( void * ) fopen (


( void * ) that_stones_names,

( void * ) "rb"


);









if (  ( void * ) note_files_got  ==  ( void * ) NULL  )

{

























/* ( int ) */  * ( int * )  ( void * ) that_silts_results  =  ( int ) 0;

























/* ( void * ) */ note_files_got  =  ( void * ) NULL;









/* ( void * ) */  note_waters_resized  =  ( void * ) NULL;









/* ( void * ) */  note_stones_read  =  ( void * ) NULL;









/* ( void * ) */  note_silts_counts  =  ( void * ) NULL;

























return  ( void * ) NULL;









}

























/* ( void * ) */  note_waters_resized  =  ( void * ) NULL;









while (  ( void * ) note_waters_resized  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_waters_resized   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( char )   );

}









/* ( char ) */  * ( char * )  ( void * ) note_waters_resized   =   ( char ) 0;
















/* ( char ) */  * ( char * )  ( void * ) note_waters_resized   =   ( char ) '\0';
















/* ( void * ) */  * ( void * * )  that_stones_results   =   ( void * ) note_waters_resized;









/* ( void * ) */  note_waters_resized  =  ( void * ) NULL;

























/* ( void * ) */  note_stones_read  =  ( void * ) NULL;
















while (  ( void * ) note_stones_read  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_stones_read   =   ( void * ) malloc (   ( int ) 2   *   ( int ) ( unsigned int ) sizeof ( char )   );

}
















/* ( char ) */  * ( char * )

(


( char * ) ( void * )  note_stones_read

+

( int ) 0


)  =  ( char ) 0;









/* ( char ) */  * ( char * )

(


( char * ) ( void * )  note_stones_read

+

( int ) 1


)  =  ( char ) 0;
















/* ( char ) */  * ( char * )  ( void * ) note_stones_read   =   ( char ) '\0';

























/* ( void * ) */  note_silts_counts  =  ( void * ) NULL;









while (  ( void * ) note_silts_counts  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_counts   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * )  ( void * ) note_silts_counts   =   ( int ) 0;

























while

(

( void * ) fgets (


( void * ) note_stones_read,

( int ) 2,

( FILE * ) ( void * )  note_files_got


)  !=  ( void * ) NULL

)

{

























/* ( int ) */  * ( int * )  ( void * ) note_silts_counts   =   ( int ) 0;









while

(


( char ) * ( char * )

(


( char * )  ( void * ) * ( void * * )  that_stones_results

+

( int ) * ( int * )  ( void * ) note_silts_counts


)

!=

( char ) '\0'


)

{



/* ( int ) */  * ( int * )  ( void * ) note_silts_counts

=

( int ) * ( int * )  ( void * ) note_silts_counts

+

( int ) 1;



}
















/* ( void * ) */  note_waters_resized  =  ( void * ) NULL;









while (  ( void * ) note_waters_resized  ==  ( void * ) NULL  )

{





/* ( void * ) */  note_waters_resized  =  ( void * ) realloc

(



( void * ) * ( void * * )  that_stones_results,



(   ( int ) 1    +    ( int ) 1    +    ( int ) * ( int * )  ( void * ) note_silts_counts   )

*

( int ) ( unsigned int ) sizeof ( char )



);





}
















/* ( void * ) */  * ( void * * )  that_stones_results   =   ( void * ) note_waters_resized;









/* ( void * ) */  note_waters_resized  =  ( void * ) NULL;

























/* ( char ) */  * ( char * )

(


( char * )  ( void * ) * ( void * * )  that_stones_results

+

( int ) * ( int * )  ( void * ) note_silts_counts


)   =   ( char ) * ( char * )  ( void * ) note_stones_read;









/* ( char ) */  * ( char * )

(


( char * )  ( void * ) * ( void * * )  that_stones_results

+

( int ) * ( int * )  ( void * ) note_silts_counts

+

( int ) 1


)  =  ( char ) '\0';
















/* ( char ) */  * ( char * )

(


( char * ) ( void * )  note_stones_read

+

( int ) 0


)  =  ( char ) 0;









/* ( char ) */  * ( char * )

(


( char * ) ( void * )  note_stones_read

+

( int ) 1


)  =  ( char ) 0;
















/* ( char ) */  * ( char * )  ( void * ) note_stones_read   =   ( char ) '\0';
















}

























/* ( int ) */  * ( int * )  ( void * ) * ( void * * )  that_silts_results   =   ( int ) 1;

























void * note_silts_results  =  ( void * ) NULL;









while (  ( void * ) note_silts_results  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_results  =  ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * )  ( void * ) note_silts_results   =   ( int ) 0;
















/* ( int ) */  * ( int * )  ( void * ) note_silts_results   =   ( int ) fclose (  ( void * ) note_files_got  );









if (   ( int ) * ( int * )  ( void * ) note_silts_results   ==   ( int ) -1   )

{

/* ( int ) */  * ( int * )  ( void * ) that_silts_results   =   ( int ) 0;

}









/* ( void * ) */  note_files_got  =  ( void * ) NULL;
















/* ( int ) */  * ( int * )  ( void * ) note_silts_results   =   ( int ) 0;









if (  ( void * ) note_silts_results  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_results  );

}









/* ( void * ) */  note_silts_results  =  ( void * ) NULL;

























/* ( void * ) */  note_waters_resized  =  ( void * ) NULL;

























/* ( char ) */  * ( char * )

(


( char * ) ( void * ) note_stones_read

+

( int ) 0


)  =  ( char ) 0;









/* ( char ) */  * ( char * )

(


( char * ) ( void * ) note_stones_read

+

( int ) 1


)  =  ( char ) 0;
















/* ( char ) */  * ( char * )  ( void * ) note_stones_read   =   ( char ) '\0';
















if (  ( void * ) note_stones_read  !=  ( void * ) NULL  )

{

free (  ( void * ) note_stones_read  );

}
















/* ( void * ) */  note_stones_read  =  ( void * ) NULL;

























/* ( int ) */  * ( int * )  ( void * ) note_silts_counts   =   ( int ) 0;









if (  ( void * ) note_silts_counts  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_counts  );

}









/* ( void * ) */  note_silts_counts  =  ( void * ) NULL;

























return  ( void * ) NULL;









}




#endif

