/*

#include "./../../../roots/lakes/prepare.computer"


#include "./../../../roots/lakes/waves/create.computer"

#include "./../../../roots/lakes/waves/resize.computer"

#include "./../../../roots/lakes/waves/free.computer"


#include "./../../../roots/lakes/stones/compare.computer"



#include "./../../../branches/lakes/prepare.computer"

*/


void *  drop_fst_branches_lakes_waves

(  void *  that_stones_names  )

{



void * note_silts_counts = that_fst_roots_lakes_prepare;

create_fst_roots_lakes_waves  ( & note_silts_counts );


void * note_silts_results = that_fst_roots_lakes_prepare;

create_fst_roots_lakes_waves  ( & note_silts_results );


void * note_silts_sizes = that_fst_roots_lakes_prepare;

create_fst_roots_lakes_waves ( & note_silts_sizes );


void * note_silts_switches = that_fst_roots_lakes_prepare;

create_fst_roots_lakes_waves  (  & note_silts_switches  );

* ( __uint64_t * ) note_silts_switches   =   0;





* ( __uint64_t * ) note_silts_counts   =   1;
  
while

(

* ( __uint64_t * ) note_silts_counts  <=   * ( __uint64_t * ) that_fst_branches_lakes [ 0 ] [ 1 ]

)

{



if  (  * ( __uint64_t * ) note_silts_switches   ==   0  )

{


compare_fst_roots_lakes_stones

(

that_stones_names,

that_fst_branches_lakes  [ * ( __uint64_t * ) note_silts_counts ] [ 0 ],


& note_silts_results

);



if  (   * ( __uint64_t * ) note_silts_results   ==   1   )

{


free_fst_roots_lakes_waves  (  & that_fst_branches_lakes  [ * ( __uint64_t * ) note_silts_counts ] [ 0 ]  );

free_fst_roots_lakes_waves  (  & that_fst_branches_lakes  [ * ( __uint64_t * ) note_silts_counts ] [ 1 ]  );


free_fst_roots_lakes_waves  (  ( void * * ) & that_fst_branches_lakes  [ * ( __uint64_t * ) note_silts_counts ]  );


that_fst_branches_lakes [ * ( __uint64_t * ) note_silts_counts ] = that_fst_roots_lakes_prepare;


* ( __uint64_t * ) note_silts_switches  =  1;

}


}




else if  (  * ( __uint64_t * ) note_silts_switches  ==  1  )

{


that_fst_branches_lakes [ * ( __uint64_t * ) note_silts_counts  -  1 ]

=

that_fst_branches_lakes [ * ( __uint64_t * ) note_silts_counts ];




that_fst_branches_lakes [ * ( __uint64_t * ) note_silts_counts ]

=

that_fst_roots_lakes_prepare;


}



* ( __uint64_t * ) note_silts_counts   =   * ( __uint64_t * ) note_silts_counts   +   1;

}






if  (  * ( __uint64_t * ) note_silts_switches   ==   1  )

{


* ( __uint64_t * ) that_fst_branches_lakes [ 0 ] [ 1 ] = * ( __uint64_t * ) that_fst_branches_lakes [ 0 ] [ 1 ]   -   1;



// void *  for  eight bytes  for  sixtie-four bits  device

* ( __uint64_t * ) note_silts_sizes  =  8  *  ( 1  +  * ( __uint64_t * ) that_fst_branches_lakes  [ 0 ] [ 1 ] );


resize_fst_roots_lakes_waves

(

( void * * ) & that_fst_branches_lakes,

note_silts_sizes

);


}




free_fst_roots_lakes_waves  ( & note_silts_counts );

free_fst_roots_lakes_waves  ( & note_silts_results  );

free_fst_roots_lakes_waves  ( & note_silts_sizes );

free_fst_roots_lakes_waves  ( & note_silts_switches );
  
  
return  that_fst_roots_lakes_prepare;

}