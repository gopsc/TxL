




void *  fstBranchesLakeEnd ()

{



void *  note_numbers_counts;

fstRootsDataCreate  (  & note_numbers_counts  );



for

(

* ( __uint64_t * ) note_numbers_counts   =  1;

* ( __uint64_t * ) note_numbers_counts  <=  * ( __uint64_t * ) fstBranchesLake  [ 0 ] [ 1 ];

* ( __uint64_t * ) note_numbers_counts   =  * ( __uint64_t * ) fstBranchesLake   +   1

)

{

fstRootsDataFree   (  ( void ** ) & fstBranchesLake  [  * ( __uint64_t * ) note_numbers_counts  ] [ 0 ] );

fstRootsDataFree   (  ( void ** ) & fstBranchesLake  [  * ( __uint64_t * ) note_numbers_counts  ] [ 1 ] );

fstRootsDataFree   (  ( void ** ) & fstBranchesLake  [  * ( __uint64_t * ) note_numbers_counts  ]  );

}


fstRootsDataFree  (  & note_numbers_counts );




fstRootsDataFree  (  & fstBranchesLake  [ 0 ] [ 1 ]  );

fstRootsDataFree  (  & fstBranchesLake  [ 0 ] [ 0 ]  );

fstRootsDataFree  (  ( void ** ) & fstBranchesLake  [ 0 ]  );

fstRootsDataFree  (  ( void ** ) & fstBranchesLake  );



fstBranchesLake  =  NULL;




return  fstBranchesLake;

}
