

#include "./../../roots/threads/prepare.bases"

/*
#include "./../../roots/threads/locks/end.bases"

#include "./../../roots/threads/locks/drop.bases"
*/

#include "./../../roots/lakes/prepare.bases"


#include "./../../roots/lakes/waves/create.bases"

#include "./../../roots/lakes/waves/resize.bases"

#include "./../../roots/lakes/waves/free.bases"


#include "./../../roots/lakes/stones/copy.bases"




#ifndef added_fst_branches_lakes_end

#define added_fst_branches_lakes_end




that_fst_roots_threads_prepare_waters

end_fst_branches_lakes

(


that_fst_roots_threads_prepare_waters *

that_waters_lakes


)

{

























if ( * that_waters_lakes == that_fst_roots_lakes_prepare )

{

return that_fst_roots_lakes_prepare;

}

























that_fst_roots_threads_prepare_waters

note_silts_counts = that_fst_roots_lakes_prepare;









create_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

& note_silts_counts


);









* ( that_fst_roots_threads_prepare_silts * )

note_silts_counts = 0;
















that_fst_roots_threads_prepare_waters

note_silts_sizes = that_fst_roots_lakes_prepare;









create_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

& note_silts_sizes


);









* ( that_fst_roots_threads_prepare_silts * )

note_silts_sizes = 0;

























* ( that_fst_roots_threads_prepare_silts * )

note_silts_counts


=


* ( that_fst_roots_threads_prepare_silts * )


(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 1 )  );









while

(


* ( that_fst_roots_threads_prepare_silts * )

( note_silts_counts )


 > 0


)

{

























* ( that_fst_roots_threads_prepare_silts * )


(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 1 )  )



=



* ( that_fst_roots_threads_prepare_silts * )


(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 1 )  )



- 1;

























copy_fst_roots_lakes_stones

(




( that_fst_roots_threads_prepare_waters )


(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 2 )  ),




( that_fst_roots_threads_prepare_waters )

""




);









free_fst_roots_lakes_waves

(




( that_fst_roots_threads_prepare_waters * )


( & (  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 2 )  ) )




);









(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 2 )  )



= that_fst_roots_lakes_prepare;

























free_fst_roots_lakes_waves

(




( that_fst_roots_threads_prepare_waters * )


( & (  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 1 )  ) )




);









(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 1 )  )



= that_fst_roots_lakes_prepare;

























copy_fst_roots_lakes_stones

(




( that_fst_roots_threads_prepare_waters )


(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 0 )  ),




( that_fst_roots_threads_prepare_waters )

""




);









free_fst_roots_lakes_waves

(




( that_fst_roots_threads_prepare_waters * )


( & (  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 0 )  ) )




);









(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 0 )  )



= that_fst_roots_lakes_prepare;

























free_fst_roots_lakes_waves

(




( that_fst_roots_threads_prepare_waters * )


( & (  * (  (


( that_fst_roots_threads_prepare_waters * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  ) )




);









(  * (  (


( that_fst_roots_threads_prepare_waters * )

( * that_waters_lakes )


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  )



= that_fst_roots_lakes_prepare;

























* ( that_fst_roots_threads_prepare_silts * )

note_silts_sizes



=



( 1 +



* ( that_fst_roots_threads_prepare_silts * )


(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 1 )  )



)



*



(


* ( that_fst_roots_threads_prepare_silts * )

that_fst_roots_threads_prepare_waters_sizes


);
















resize_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

( that_waters_lakes ),


( that_fst_roots_threads_prepare_waters )

note_silts_sizes


);
















* ( that_fst_roots_threads_prepare_silts * )

note_silts_sizes = 0;

























* ( that_fst_roots_threads_prepare_silts * )

note_silts_counts


=


* ( that_fst_roots_threads_prepare_silts * )

note_silts_counts


- 1;









}
















* ( that_fst_roots_threads_prepare_silts * )

( note_silts_counts ) = 0;









free_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

( & note_silts_counts )


);









note_silts_counts = that_fst_roots_lakes_prepare;
















* ( that_fst_roots_threads_prepare_silts * )

( note_silts_sizes ) = 0;









free_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

( & note_silts_sizes )


);









note_silts_sizes = that_fst_roots_lakes_prepare;






















/*

end_fst_roots_threads_locks

(




( that_fst_roots_threads_prepare_waters )


(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 2 )  )




);









drop_fst_roots_threads_locks

(




( that_fst_roots_threads_prepare_waters * )


( & (  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 2 )  ) )




);

*/







(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 2 )  )



= that_fst_roots_lakes_prepare;

























* ( that_fst_roots_threads_prepare_silts * )


(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 1 )  )



= 0;









free_fst_roots_lakes_waves

(




( that_fst_roots_threads_prepare_waters * )


( & (  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 1 )  ) )




);









(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 1 )  )



= that_fst_roots_lakes_prepare;

























copy_fst_roots_lakes_stones

(




( that_fst_roots_threads_prepare_waters )


(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 0 )  ),




( that_fst_roots_threads_prepare_waters )

""




);









free_fst_roots_lakes_waves

(




( that_fst_roots_threads_prepare_waters * )


( & (  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 0 )  ) )




);









(  * (  * (  (


( that_fst_roots_threads_prepare_waters * * )

( * that_waters_lakes )


)  + 0 )  + 0 )  )



= that_fst_roots_lakes_prepare;

























free_fst_roots_lakes_waves

(




( that_fst_roots_threads_prepare_waters * )


( & (  * (  (


( that_fst_roots_threads_prepare_waters * )

( * that_waters_lakes )


)  + 0 )  ) )




);









(  * (  (


( that_fst_roots_threads_prepare_waters * )

( * that_waters_lakes )


)  + 0 )  )



= that_fst_roots_lakes_prepare;

























free_fst_roots_lakes_waves

(


( that_fst_roots_threads_prepare_waters * )

( that_waters_lakes )


);









( * that_waters_lakes ) = that_fst_roots_lakes_prepare;

























return  that_fst_roots_lakes_prepare;









}




#endif

