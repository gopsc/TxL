

#include <stdlib.h>

#include <stdio.h>




#ifndef added_fst_roots_trees_files_write

#define added_fst_roots_trees_files_write




void * write_fst_roots_trees_files

(

void * that_stones_names,

void * that_stones_contents,

void * that_silts_results

)

{

























if (  ( void * ) that_stones_names  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}









if (  ( void * ) that_stones_contents  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}









if (  ( void * ) that_silts_results  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}
















if (  ( int ) * ( int * ) ( void * ) that_silts_results  !=  ( int ) 0  )

{

return  ( void * ) NULL;

}

























void * note_files_saved = NULL;









note_files_saved

=

( void * ) fopen (

( void * ) that_stones_names,

( void * ) "wb"


);
















if ( note_files_saved == NULL )

{



* ( int * ) that_silts_results = 0;



return NULL;



}

























void * note_silts_lengths_contents = NULL;









while ( note_silts_lengths_contents == NULL )

{

note_silts_lengths_contents = malloc (  1 * sizeof ( int )  );

}









* ( int * ) note_silts_lengths_contents = 0;
















* ( int * ) note_silts_lengths_contents = 0;









while (  * (  ( char * ) that_stones_contents  +  * ( int * ) note_silts_lengths_contents  )  !=  '\0'  )

{

* ( int * ) note_silts_lengths_contents  =  * ( int * ) note_silts_lengths_contents  +  1;

}

























void * note_silts_results = NULL;









while ( note_silts_results == NULL )

{

note_silts_results = malloc (  1 * sizeof ( int )  );

}









* ( int * ) note_silts_results = 0;
















* ( int * ) note_silts_results = 0;









* ( int * ) note_silts_results

=

fprintf (


( void * ) note_files_saved,

( void * ) "%s",

( void * ) that_stones_contents

);
















if (  * ( int * ) note_silts_results  !=  * ( int * ) note_silts_lengths_contents  )

{

* ( int * ) that_silts_results = 0;

}









else if (  * ( int * ) note_silts_results  ==  * ( int * ) note_silts_lengths_contents  )

{

* ( int * ) that_silts_results = 1;

}

























* ( int * ) note_silts_results = fclose (  ( void * ) note_files_saved  );









if ( * ( int * ) note_silts_results == -1 )

{

* ( int * ) that_silts_results = 0;

}

























* ( int * ) note_silts_lengths_contents = 0;









if ( note_silts_lengths_contents != NULL )

{

free ( note_silts_lengths_contents );

}









note_silts_lengths_contents = NULL;

























* ( int * ) note_silts_results = 0;









if ( note_silts_results != NULL )

{

free ( note_silts_results );

}









note_silts_results = NULL;

























return  NULL;









}




#endif

