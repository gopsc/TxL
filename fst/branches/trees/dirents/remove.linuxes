

#include "./../../../roots/threads/prepare.bases"


#include "./../../../roots/lakes/prepare.bases"


#include "./../../../roots/lakes/waves/create.bases"

#include "./../../../roots/lakes/waves/free.bases"


#include "./../../../roots/trees/dirents/is.linuxes"

#include "./../../../roots/trees/remove.computers"



#include "./../../../branches/lakes/waves/fish.bases"




#ifndef added_fst_branches_trees_dirents_remove

#define added_fst_branches_trees_dirents_remove




that_fst_roots_threads_prepare_waters

remove_fst_branches_trees_dirents

(



that_fst_roots_threads_prepare_waters

that_waters_lakes_stones,


that_fst_roots_threads_prepare_waters

that_stones_names,



that_fst_roots_threads_prepare_waters

that_waters_lakes_lights,


that_fst_roots_threads_prepare_waters

* that_waters_results



)

{

























if

(


( that_fst_roots_threads_prepare_waters )

that_waters_results


==


that_fst_roots_lakes_prepare


)

{




return that_fst_roots_lakes_prepare;



}
















if ( that_waters_lakes_stones == that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}









if ( that_stones_names == that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}









if ( that_waters_lakes_lights == that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}









if ( * that_waters_results != that_fst_roots_lakes_prepare )

{




return that_fst_roots_lakes_prepare;



}

























that_fst_roots_threads_prepare_waters

note_waters_names = that_fst_roots_lakes_prepare;









that_fst_roots_threads_prepare_waters

note_waters_lakes = that_fst_roots_lakes_prepare;









that_fst_roots_threads_prepare_waters

note_waters_fish = that_fst_roots_lakes_prepare;

























fish_fst_branches_lakes_waves

(



( that_fst_roots_threads_prepare_waters )

that_waters_lakes_stones,


( that_fst_roots_threads_prepare_waters )

that_stones_names,



( that_fst_roots_threads_prepare_waters * )

& note_waters_names



);









if ( note_waters_names == that_fst_roots_lakes_prepare )

{




note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



note_waters_fish = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;



} 

























note_waters_fish = that_fst_roots_lakes_prepare;









fish_fst_branches_lakes_waves

(



( that_fst_roots_threads_prepare_waters )

that_waters_lakes_lights,


( that_fst_roots_threads_prepare_waters )

"fst,branches,lakes,bubbles,begin",



( that_fst_roots_threads_prepare_waters * )

& note_waters_fish



);









if ( note_waters_fish == that_fst_roots_lakes_prepare )

{




note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



note_waters_fish = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;



}









note_waters_lakes = that_fst_roots_lakes_prepare;




note_waters_fish

=

* ( that_fst_roots_threads_prepare_waters * )

note_waters_fish;




note_waters_lakes = note_waters_fish;




note_waters_fish = that_fst_roots_lakes_prepare;
















note_waters_fish = that_fst_roots_lakes_prepare;









fish_fst_branches_lakes_waves

(



( that_fst_roots_threads_prepare_waters )

note_waters_lakes,


( that_fst_roots_threads_prepare_waters )

"fst,branches,lakes,bubbles,lights,begin",



( that_fst_roots_threads_prepare_waters * )

& note_waters_fish



);









if ( note_waters_fish == that_fst_roots_lakes_prepare )

{




note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



note_waters_fish = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;



}









note_waters_lakes = that_fst_roots_lakes_prepare;




note_waters_fish

=

* ( that_fst_roots_threads_prepare_waters * )

note_waters_fish;




note_waters_lakes = note_waters_fish;




note_waters_fish = that_fst_roots_lakes_prepare;

























that_fst_roots_threads_prepare_waters

note_silts_results = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_silts_results );

* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;

























* ( that_fst_roots_threads_prepare_silts * ) note_silts_results == 0;




is_fst_roots_trees_dirents ( note_waters_names, note_silts_results );





if ( * ( that_fst_roots_threads_prepare_silts * ) note_silts_results == 1 )

{













* ( that_fst_roots_threads_prepare_silts * ) note_silts_results == 0;




remove_fst_roots_trees ( note_waters_names, note_silts_results );





if ( * ( that_fst_roots_threads_prepare_silts * ) note_silts_results == 1 )

{









fish_fst_branches_lakes_waves

(


note_waters_lakes,


( that_fst_roots_threads_prepare_waters ) "yes",

that_waters_results


);








note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;

free_fst_roots_lakes_waves ( & note_silts_results );

note_silts_results = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;


}

}






















fish_fst_branches_lakes_waves

(


note_waters_lakes,


( that_fst_roots_threads_prepare_waters ) "no",

that_waters_results


);








note_waters_names = that_fst_roots_lakes_prepare;



note_waters_lakes = that_fst_roots_lakes_prepare;



* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;

free_fst_roots_lakes_waves  ( & note_silts_results  );

note_silts_results = that_fst_roots_lakes_prepare;




return that_fst_roots_lakes_prepare;


}




#endif

