/*

#include "./../../../roots/lakes/prepare.computer"


#include "./../../../roots/lakes/waves/create.computer"

#include "./../../../roots/lakes/waves/free.computer"


#include "./../../../roots/lakes/stones/compare.computer"



#include "./../../../branches/lakes/prepare.computer"

*/


void  *   fish_fst_branches_lakes_waves

(

void *  that_stones_names,

void ** that_silts_results

)

{



void * note_silts_counts = that_fst_roots_lakes_prepare;

create_fst_roots_lakes_waves ( & note_silts_counts );


void * note_silts_results = that_fst_roots_lakes_prepare;
 
create_fst_roots_lakes_waves ( & note_silts_results );





* ( __uint64_t * ) note_silts_counts  =  1;


while

(

* ( __uint64_t * ) note_silts_counts  <=  * ( __uint64_t * ) that_fst_branches_lakes  [ 0 ] [ 1 ]

)

{



compare_fst_roots_lakes_stones

(

that_stones_names,

that_fst_branches_lakes  [  * ( __uint64_t * ) note_silts_counts  ] [ 0 ],


& note_silts_results

);



if   (   * ( __uint64_t * ) note_silts_results   ==   1   )

{


* that_silts_results   =   that_fst_branches_lakes  [  * ( __uint64_t * ) note_silts_counts  ] [ 1 ];


free_fst_roots_lakes_waves  (  & note_silts_counts  );

free_fst_roots_lakes_waves  (  & note_silts_results  );


return  that_fst_roots_lakes_prepare;

}




* ( __uint64_t * ) note_silts_counts  =  * ( __uint64_t * ) note_silts_counts   +   1;
 
}




* that_silts_results   =  that_fst_roots_lakes_prepare;


free_fst_roots_lakes_waves ( & note_silts_counts );

free_fst_roots_lakes_waves ( & note_silts_results );
 
 
return  that_fst_roots_lakes_prepare;

}