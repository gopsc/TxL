











/*

#include "./../../roots/lakes/bubbles/prepare.computer"


#include "./../../roots/lakes/create.computer"

#include "./../../roots/lakes/free.computer"


#include "./../../branches/lakes/prepare.computer"

*/


void *  end_fst_branches_lakes ()

{









void *  note_waters_counts = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_waters_counts );









* ( __uint64_t * ) note_waters_counts = * ( __uint64_t * ) that_fst_branches_lakes  [ 0 ] [ 1 ];

while

(

* ( __uint64_t * ) note_waters_counts  > 0

)

{





free_fst_roots_lakes_waves   (  & that_fst_branches_lakes  [  * ( __uint64_t * ) note_waters_counts  ] [ 0 ]  );

free_fst_roots_lakes_waves   (  & that_fst_branches_lakes  [  * ( __uint64_t * ) note_waters_counts  ] [ 1 ]  );


free_fst_roots_lakes_waves   (  ( void * * ) & that_fst_branches_lakes  [  * ( __uint64_t * ) note_waters_counts  ]  );




* ( __uint64_t * ) that_fst_branches_lakes  [ 0 ] [ 1 ] = * ( __uint64_t * ) that_fst_branches_lakes  [ 0 ] [ 1 ] -1;







* ( __uint64_t * ) note_waters_counts   =  * ( __uint64_t * ) note_waters_counts   -   1;

}




free_fst_roots_lakes_waves  (  & note_waters_counts );
















free_fst_roots_lakes_waves  (  & that_fst_branches_lakes  [ 0 ] [ 1 ]  );

free_fst_roots_lakes_waves  (  & that_fst_branches_lakes  [ 0 ] [ 0 ]  );


free_fst_roots_lakes_waves  (  ( void * * ) & that_fst_branches_lakes  [ 0 ]  );


free_fst_roots_lakes_waves  (  ( void * * ) & that_fst_branches_lakes  );













return  that_fst_roots_lakes_prepare;

}
