

#include <stdlib.h>



#include "./../../../roots/threads/prepare.bases"




#ifndef added_fst_roots_lakes_stones_find

#define added_fst_roots_lakes_stones_find




that_fst_roots_threads_prepare_waters

find_fst_roots_lakes_stones

(

that_fst_roots_threads_prepare_waters

that_stones_targets,


that_fst_roots_threads_prepare_waters

that_stones_found,


that_fst_roots_threads_prepare_waters

* that_waters_results

)

{





















that_fst_roots_threads_prepare_waters

note_silts_lengths_targets = NULL;




while ( note_silts_lengths_targets == NULL )

{



note_silts_lengths_targets = malloc

( 1 *

( * ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes )

);



}





* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_targets = 0;


while

(


* (

( that_fst_roots_threads_prepare_stones * ) that_stones_targets

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_targets

) != '\0'


)

{

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_targets

=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_targets + 1;

}























that_fst_roots_threads_prepare_waters

note_silts_lengths_found = NULL;




while ( note_silts_lengths_found == NULL )

{



note_silts_lengths_found = malloc

( 1 * 

* ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes

);



}





* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_found = 0;


while

(


* (

( that_fst_roots_threads_prepare_stones * ) that_stones_found

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_found

) != '\0'


)

{

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_found

=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_found + 1;

}























if

(

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_targets

<

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_found

)

{








* that_waters_results = NULL;








if ( note_silts_lengths_targets != NULL )

{


free ( note_silts_lengths_targets );


}





if ( note_silts_lengths_found != NULL )

{


free ( note_silts_lengths_found );


}










return NULL;

}























that_fst_roots_threads_prepare_waters

note_silts_counts_targets = NULL;




while ( note_silts_counts_targets == NULL )

{



note_silts_counts_targets = malloc

( 1 * 

( * ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes )

);



}























that_fst_roots_threads_prepare_waters

note_silts_counts_found = NULL;




while ( note_silts_counts_found == NULL )

{



note_silts_counts_found = malloc

( 1 * 

( * ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes )

);



}






















that_fst_roots_threads_prepare_waters

note_silts_switches = NULL;




while ( note_silts_switches == NULL )

{



note_silts_switches = malloc

( 1 * 

( * ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes )

);


}
























* ( that_fst_roots_threads_prepare_silts * ) note_silts_switches = 0;


* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_targets = 0;


while

(


* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_targets

<

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_targets


)

{















* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_found = 0;


while

(

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_found

<

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_found

)

{











if

(


* (

( that_fst_roots_threads_prepare_stones * ) that_stones_targets

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_targets

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_found

)


!=


* (

( that_fst_roots_threads_prepare_stones * ) that_stones_found

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_found

)


)

{


* ( that_fst_roots_threads_prepare_silts * ) note_silts_switches = 0;


break;

}















else if

(


* (

( that_fst_roots_threads_prepare_stones * ) that_stones_targets

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_targets

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_found

)


==


* (

( that_fst_roots_threads_prepare_stones * ) that_stones_found

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_found

)


)

{

* ( that_fst_roots_threads_prepare_silts * ) note_silts_switches = 1;

}














* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_found

=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_found + 1;

}















if ( * ( that_fst_roots_threads_prepare_silts * ) note_silts_switches == 1 )

{










* that_waters_results

=

( that_fst_roots_threads_prepare_stones * ) that_stones_targets

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_targets;










break;

}












* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_targets

=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts_targets + 1;

}
























if ( * ( that_fst_roots_threads_prepare_silts * ) note_silts_switches == 0 )

{

* that_waters_results = NULL;

}






















if ( note_silts_lengths_targets != NULL )

{


free ( note_silts_lengths_targets );


}





if ( note_silts_lengths_found != NULL )

{


free ( note_silts_lengths_found );


}





if ( note_silts_counts_targets != NULL )

{


free ( note_silts_counts_targets );


}





if ( note_silts_counts_found != NULL )

{


free ( note_silts_counts_found );


}





if ( note_silts_switches != NULL )

{


free  (  note_silts_switches  );


}























return  NULL;

}




#endif

