/*

#include "./../../../roots/lakes/prepare.bases"


#include "./../../../roots/lakes/waves/create.bases"

#include "./../../../roots/lakes/waves/free.bases"


#include "./../../../roots/trees/dirents/is.linuxes"



#include "./../../../branches/threads/prepare.bases"


#include "./../../../branches/lakes/waves/fish.bases"

*/


that_fst_branches_threads_prepare_waters

is_fst_branches_trees_dirents

(

that_fst_branches_threads_prepare_waters

that_stones_names,


that_fst_branches_threads_prepare_waters

* that_waters_results

)

{



















that_fst_branches_threads_prepare_waters

note_waters_was = that_fst_roots_lakes_prepare;


fish_fst_branches_lakes_waves

(

that_stones_names,

& note_waters_was

);



















that_fst_branches_threads_prepare_waters

note_silts_results = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_silts_results );



















is_fst_roots_trees_dirents

(

note_waters_was,

note_silts_results

);


















if ( * ( that_fst_branches_threads_prepare_silts * ) note_silts_results == 1 )
   
{










fish_fst_branches_lakes_waves

(

( that_fst_branches_threads_prepare_waters ) "fst,branches,lakes,bubbles,yes",

that_waters_results

);










free_fst_roots_lakes_waves ( & note_silts_results );


return that_fst_roots_lakes_prepare;

}




















fish_fst_branches_lakes_waves

(

( that_fst_branches_threads_prepare_waters ) "fst,branches,lakes,bubbles,no",

that_waters_results

);










free_fst_roots_lakes_waves  ( & note_silts_results  );


return that_fst_roots_lakes_prepare;

}