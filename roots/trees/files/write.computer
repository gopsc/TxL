/*

#include  <stdlib.h>

#include  <stdio.h>



#include "./../../../roots/threads/prepare.computer"

*/


that_fst_roots_threads_prepare_waters

write_fst_roots_trees_files

(

that_fst_roots_threads_prepare_waters

that_stones_names,


that_fst_roots_threads_prepare_waters

that_stones_contents,


that_fst_roots_threads_prepare_waters

* that_silts_results

)

{





that_fst_roots_threads_prepare_waters

note_files_saved = NULL;


note_files_saved = ( that_fst_roots_threads_prepare_waters ) fopen  (  that_stones_names,  "w"  );



if ( note_files_saved == NULL )

{

* ( that_fst_roots_threads_prepare_silts * ) * that_silts_results = 0;

return NULL;

}





that_fst_roots_threads_prepare_waters

note_silts_lengths_contents = NULL;


note_silts_lengths_contents = malloc

( 1 *

* ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes

);





* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_contents  =  0;


while

(


* (

( that_fst_roots_threads_prepare_stones * ) that_stones_contents

+

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_contents

) != '\0'


)

{



* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_contents

=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_contents + 1;



}






that_fst_roots_threads_prepare_waters

note_silts_results = NULL;


note_silts_results  =  malloc

( 1 *

* ( that_fst_roots_threads_prepare_silts * ) that_fst_roots_threads_prepare_silts_sizes

);









* ( that_fst_roots_threads_prepare_silts * ) note_silts_results

=

fprintf  (  note_files_saved,  "%s",  that_stones_contents  );




if

(

* ( that_fst_roots_threads_prepare_silts * ) note_silts_results

==

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_contents

)

{



* ( that_fst_roots_threads_prepare_silts * ) * that_silts_results = 1;



}





else if

(

* ( that_fst_roots_threads_prepare_silts * ) note_silts_results

!=

* ( that_fst_roots_threads_prepare_silts * ) note_silts_lengths_contents

)

{

* ( that_fst_roots_threads_prepare_silts * ) * that_silts_results = 0;

}










* ( that_fst_roots_threads_prepare_silts * ) note_silts_results

=

fclose ( note_files_saved );





if ( * ( that_fst_roots_threads_prepare_silts * ) note_silts_results == -1 )

{

* ( that_fst_roots_threads_prepare_silts * ) * that_silts_results = 0;

}








free ( note_silts_lengths_contents );

free ( note_silts_results );

return  NULL;

}