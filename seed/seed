




# list if files

# we could auto got this from it soon





 things/c/that/Linux.h


# moved flag to hope of dog

# things/c/that/flag.h







# get that form a convent, maybe from network

# good idea






# take it where they belong


# watchdog hopes maybe added after this

# add flag?

 watchdog/that/hope.c
 
 
 

 watchdog/about/that/that/system.c

 watchdog/about/that/that/cpu.c

 watchdog/about/that/that/memory.c
 
 watchdog/about/that/that/disk.c
 
 watchdog/about/that/that/network.c
 
 watchdog/about/that/that/sonud.c
 
 
 watchdog/about/that/that/that.c










# things to clean it

# be easier to read



 watchdog/about/that/clean.c









# dog will use


 network/that/hope.c

 network/that/that.c
 
 network/that/check.c

 network/that/clean.c






 sound/that/hope.c

 sound/that/that.c










# load them after including

# as a structure



# put it to the end of list of head and build

# then it can use the structure of configurations to note configurations everywhere


# but if we don't have anyone in code, we set a head of blank to fill it




 things/c/that/hope.h






















# ways of box
 
# load them first
 
# they could be use everywhere afterthis






# maybe someday we will use it



# some day we use lots of library file to use it by acrossing device

# and i need almost little number to use with gnu library

# so i need to take it




 things/c/data/translate/number_word.c








# some day use it to display

# as we are on tkinter


# maybe save tonot


 things/c/system/output/print.c








# in the things we have ways we take

# and they're from library

# maybe use a dirent to put all library way in


# far away from things
 



 things/c/system/file-system/dirent/is.c


 things/c/system/file-system/file/is.c

 things/c/system/file-system/file/get.c

 things/c/system/file-system/file/save.c

 things/c/system/file-system/file/append.c







# someway on the system only

# maybe take as alibrary



 things/c/system/process/deamon.c





# wait sometime

# it's different with different system


 things/c/system/process/wait.c







# this use a file named stdin

# may be we sould rewrite it on something



 things/c/system/commandline/shell.c










# data doing
 
# write myself diy
 
 
# maybe i should get them far away from ways from librarys



 things/c/data/secret/secrets/drop_note.c

 things/c/data/secret/secrets/drop_blank.c

 things/c/data/secret/secrets/sum.c

 things/c/data/secret/that.c









 
# note doing
 
# should be strong could read note balabala...
 

 
 watchdog/note/save.c

 watchdog/note/clear.c










# put or load about

# use some kind of ways load before

# so put them here instead of before at first



 watchdog/about/that/put.c

 watchdog/about/that/load.c










# get about


# get them from system



 watchdog/about/system/name.c

 watchdog/about/system/build.c


 watchdog/about/ip/build.c



 watchdog/about/cpu/rate.c

 watchdog/about/cpu/temperature.c

 watchdog/about/cpu/frequency.c

 watchdog/about/cpu/core.c

 watchdog/about/cpu/build.c





 watchdog/about/memory/build.c





# little difficult


# watchdog/about/disk/build.c






# maybe get it blank on some system


 watchdog/about/sound/alsa.c










# check things
 
 
 
 
# now it could run with no root





# watchdog/check/root.c

 watchdog/check/network.c

 watchdog/check/power.c

 watchdog/check/update.c






# load things


 watchdog/load/hope.c

 watchdog/load/symbol.c

 watchdog/load/listen.c






# dog show
 
 
# maybe display on display


 watchdog/show/about.c






 watchdog/dog.c










# sound snake calculate
 
 
# high level way
 
# put it below



 sound/ft/show.c

 sound/ft/dft.c

 sound/ft/fft.c

 sound/ft/test.c








# add the sound code


# make it pure
 
# use alsa outsite






# if  (  strcmp ( that_type, "base" )  ==  0  )


#  {





 sound/corde/blank.c




#  }







# else if  (  strcmp ( that_type, "alsa" )  ==  0  )


#  {


# sound/corde/alsa.c














# The data code
#  is for send some data
#  in the network connection


#  like rain, shine ...



# use other ways to update
 
# client send word next
 


 network/message/data/update/build.c

 network/message/data/update/backup.c

 network/message/data/update/append.c

 network/message/data/update/next.c

 network/message/data/update/load.c




# appending data to the message


# why put it below


 network/message/data/that.c









# Append the action codes
# it isn't static





# use a place of dirent to do it



 network/message/action
 
 
 
 






# strcpy ( note_dirent, note_path );

# strcat ( note_dirent, "/network/message/action" );



# pointer_dirent  =  opendir ( note_dirent );






# do


#  {




# ent  =  readdir ( pointer_dirent );




# if  (  ent != NULL  &&  ent -> d_type == 8  )


#  {



# strcpy (

#          note_file_action,

#          strstr ( note_dirent,  gop_configurations . name_the ) + strlen ( gop_configurations . name_the )

#        );


# strcat ( note_file_action, "/" );

# strcat ( note_file_action, ent->d_name );




# action_seed_append (
#                      note_file,
#                      note_path,
#                      note_file_action

#                    );




#  }


#  } while ( ent != NULL );




# closedir ( pointer_dirent );













# the module of judge
# means to take the words get on network

# the plan is using the trees system




 network/message/judge/blank.c

 network/message/judge/hello.c

 network/message/judge/who.c

 network/message/judge/information.c

 network/message/judge/command.c












# build the network message system



 
 network/message/that.c







# the translate system of network


# connect things
 
# maybe we could use them in library


 network/tcp/connectted.c

 network/tcp/connector.c








# build the



 thing/c/code/that.c


