

#include  <stdlib.h>




#ifndef added_fst_roots_lakes_stones_copy

#define added_fst_roots_lakes_stones_copy




void * copy_fst_roots_lakes_stones


(

void * that_stones_targets,

void * that_stones_copied

)

{

























if (  ( void * ) that_stones_targets  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}









if (  ( void * ) that_stones_copied  ==  ( void * ) NULL  )

{

return  ( void * ) NULL;

}

























void * note_silts_counts  =  ( void * ) NULL;









while (  ( void * ) note_silts_counts  ==  ( void * ) NULL  )

{

/* ( void * ) */  note_silts_counts   =   ( void * ) malloc (   ( int ) 1   *   ( int ) ( unsigned int ) sizeof ( int )   );

}









/* ( int ) */  * ( int * ) ( void * ) note_silts_counts   =   ( int ) 0;
















/* ( int ) */  * ( int * ) ( void * ) note_silts_counts   =   ( int ) 0;









while

(


( char ) * ( char * )

(   ( char * ) ( void * ) that_stones_copied   +   ( int ) * ( int * ) ( void * ) note_silts_counts   )


!=  ( char ) '\0'


)

{

























/* ( char ) */  * ( char * )

(   ( char * ) ( void * ) that_stones_targets   +   ( int ) * ( int * ) ( void * ) note_silts_counts   )


=


( char ) * ( char * )

(   ( char * ) ( void * ) that_stones_copied   +   ( int ) * ( int * ) ( void * ) note_silts_counts   );

























/* ( int ) */  * ( int * ) ( void * ) note_silts_counts


=


( int ) * ( int * ) ( void * ) note_silts_counts


+


( int ) 1;









}









/* ( char ) */  * ( char * )

(   ( char * ) ( void * ) that_stones_targets   +   ( int ) * ( int * ) ( void * ) note_silts_counts   )


=


( char ) '\0';
















/* ( int ) */  * ( int * ) ( void * ) note_silts_counts   =   ( int ) 0;









if (  ( void * ) note_silts_counts  !=  ( void * ) NULL  )

{

free (  ( void * ) note_silts_counts  );

}









/* ( void * ) */ note_silts_counts  =  ( void * ) NULL;

























return  ( void * ) NULL;









}




#endif

