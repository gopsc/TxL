





void * remove_fst_branches_trees_files

(

void * that_stones_names,

void ** that_places_results

)

{

void * note_places_removed = that_fst_branches_lakes;

fish_fst_branches_lakes ( that_stones_names, & note_places_removed );



void * note_numbers_results = that_fst_branches_lakes;

create_fst_roots_lakes ( & note_numbers_results );





is_fst_roots_trees_files ( note_places_removed, & note_numbers_results );



if ( * ( __uint64_t * ) note_numbers_results == 1 )

{

remove_fst_roots_trees ( note_places_removed, & note_numbers_results );


if ( * ( __uint64_t * ) note_numbers_results == 1 )

{

fish_fst_branches_lakes

(

( void * ) "fst,branches,lakes,bubbles,yes",

that_places_results

);




free_fst_roots_lakes  ( & note_numbers_results  );

return that_fst_branches_lakes;

}



}






fish_fst_branches_lakes

(

( void * ) "fst,branches,lakes,bubbles,no",

that_places_results

);



free_fst_roots_lakes  ( & note_numbers_results  );

return that_fst_branches_lakes;

}