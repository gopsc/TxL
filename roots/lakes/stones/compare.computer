













/*

#include <stdlib.h>

*/


void *  compare_fst_roots_lakes_stones


(

void *  that_stones_compared,

void *  that_stones_compare,

void ** that_waters_results

)

{













void *  note_waters_lengths_compared = NULL;

note_waters_lengths_compared   =   malloc  (  sizeof ( __uint64_t )  );





* ( __uint64_t * ) note_waters_lengths_compared   =   0;

while

(

* ( ( char * ) that_stones_compared  +  * ( __uint64_t * ) note_waters_lengths_compared  )   !=   '\0'

)

{

* ( __uint64_t * ) note_waters_lengths_compared   =   * ( __uint64_t * ) note_waters_lengths_compared   +   1;

}



















void *  note_waters_lengths_compare = NULL;

note_waters_lengths_compare   =   malloc  (  sizeof ( __uint64_t )  );





* ( __uint64_t * ) note_waters_lengths_compare   =   0;

while

(

* ( ( char * ) that_stones_compare  +  * ( __uint64_t * ) note_waters_lengths_compare  )   !=   '\0'

)

{

* ( __uint64_t * ) note_waters_lengths_compare   =   * ( __uint64_t * ) note_waters_lengths_compare   +   1;

}



















if

(

* ( __uint64_t * ) note_waters_lengths_compared
!=
* ( __uint64_t * ) note_waters_lengths_compare

)

{





free  (  note_waters_lengths_compared  );

free  (  note_waters_lengths_compare  );


* ( __uint64_t * ) * that_waters_results   =   0;





return  NULL;

}
















void *  note_waters_counts = NULL;

note_waters_counts   =   malloc  (  sizeof ( __uint64_t )  );




















* ( __uint64_t * ) note_waters_counts   =   0;

while

(

* ( __uint64_t * ) note_waters_counts
<
* ( __uint64_t * ) note_waters_lengths_compared

)

{



if

(

* ( ( char * ) that_stones_compared  +  * ( __uint64_t * ) note_waters_counts  ) 
!=
* ( ( char * ) that_stones_compare  +  * ( __uint64_t * ) note_waters_counts  )

)

{




free  (  note_waters_lengths_compared  );

free  (  note_waters_lengths_compare  );

free  (  note_waters_counts  );


* ( __uint64_t * ) * that_waters_results   =   0;




return  NULL;

}






* ( __uint64_t * ) note_waters_counts   =   * ( __uint64_t * ) note_waters_counts   +   1;

}









free  (  note_waters_lengths_compared  );

free  (  note_waters_lengths_compare  );

free  (  note_waters_counts  );


* ( __uint64_t * ) * that_waters_results   =   1;







return  NULL;

}








