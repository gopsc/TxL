

#ifndef added___fst_branches__lakes_bubbles___prepare

#define added___fst_branches__lakes_bubbles___prepare




#include "./../../../roots/threads/prepare.bases"


#include "./../../../roots/lakes/prepare.bases"



#include "./../../../branches/lakes/end.bases"


#include "./../../../branches/lakes/waves/fish.bases"

#include "./../../../branches/lakes/waves/drop.bases"




that_fst_roots_threads_prepare_waters

thay_ways___fst_branches__lakes_bubbles___prepare

(


that_fst_roots_threads_prepare_waters *

that_waters_lakes


)

{

























if

(


( that_fst_roots_threads_prepare_waters )

( that_fst_roots_threads_prepare_waters * )


that_waters_lakes


==


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare


)

{



return


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare;



}

















if

(


( that_fst_roots_threads_prepare_waters )

* ( that_fst_roots_threads_prepare_waters * )


that_waters_lakes


==


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare


)

{



return


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare;



}

























that_fst_roots_threads_prepare_waters

note_waters_lakes


=


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare;









fish_fst_branches_lakes_waves

(





( that_fst_roots_threads_prepare_waters )


(


( that_fst_roots_threads_prepare_waters )

* ( that_fst_roots_threads_prepare_waters * )


that_waters_lakes


),





( that_fst_roots_threads_prepare_waters )

"fst,branches,lakes,bubbles,begin",





( that_fst_roots_threads_prepare_waters * )

& // ( that_fst_roots_threads_prepare_waters )


note_waters_lakes





);









if

(


( that_fst_roots_threads_prepare_waters )

note_waters_lakes


==


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare


)

{

























// ( that_fst_roots_threads_prepare_waters )

note_waters_lakes


=


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare;

























return


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare;









}









// ( that_fst_roots_threads_prepare_waters )

note_waters_lakes


=


( that_fst_roots_threads_prepare_waters )

* ( that_fst_roots_threads_prepare_waters * )


( that_fst_roots_threads_prepare_waters )

note_waters_lakes;

























drop_fst_branches_lakes_waves

(





( that_fst_roots_threads_prepare_waters * )

& // ( that_fst_roots_threads_prepare_waters )


(


// ( that_fst_roots_threads_prepare_waters )

* ( that_fst_roots_threads_prepare_waters * )


that_waters_lakes


),





( that_fst_roots_threads_prepare_waters )

"fst,branches,lakes,bubbles,begin"





);

























end_fst_branches_lakes

(




( that_fst_roots_threads_prepare_waters * )

& // ( that_fst_roots_threads_prepare_waters )


(


// ( that_fst_roots_threads_prepare_waters )

note_waters_lakes


)




);

























// ( that_fst_roots_threads_prepare_waters )

note_waters_lakes


=


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare;

























return


( that_fst_roots_threads_prepare_waters )

that_fst_roots_lakes_prepare;









}




#endif

