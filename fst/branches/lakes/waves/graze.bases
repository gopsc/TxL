

#include "./../../../roots/threads/prepare.bases"


#include "./../../../roots/lakes/prepare.bases"


#include "./../../../roots/lakes/waves/create.bases"

#include "./../../../roots/lakes/waves/free.bases"


#include "./../../../roots/lakes/stones/compare.bases"




#ifndef added_fst_branches_lakes_waves_graze

#define added_fst_branches_lakes_waves_graze




that_fst_roots_threads_prepare_waters

graze_fst_branches_lakes_waves

(



that_fst_roots_threads_prepare_waters

that_waters_lakes,


that_fst_roots_threads_prepare_waters

that_stones_names,



that_fst_roots_threads_prepare_waters *

that_waters_results



)

{

























if

(


( that_fst_roots_threads_prepare_waters )

that_waters_results


==


that_waters_results


)

{

return that_fst_roots_lakes_prepare;

}















if ( that_waters_lakes == that_fst_roots_lakes_prepare )

{

return that_fst_roots_lakes_prepare;

}









if ( that_stones_names == that_fst_roots_lakes_prepare )

{

return that_fst_roots_lakes_prepare;

}









if ( * that_waters_results != that_fst_roots_lakes_prepare )

{

return that_fst_roots_lakes_prepare;

}

























that_fst_roots_threads_prepare_waters

note_silts_counts = that_fst_roots_lakes_prepare;


create_fst_roots_lakes_waves ( & note_silts_counts );

* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts = 0;









that_fst_roots_threads_prepare_waters

note_silts_results = that_fst_roots_lakes_prepare;
 

create_fst_roots_lakes_waves ( & note_silts_results );

* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;

























* ( that_fst_roots_threads_prepare_silts * )

note_silts_counts = 1;









while

(




* ( that_fst_roots_threads_prepare_silts * )

note_silts_counts




<=




* ( that_fst_roots_threads_prepare_silts * )


* (  * (  (


( that_fst_roots_threads_prepare_waters * * )

that_waters_lakes


)  + 0 )  + 1 ) 




)

{
















* ( that_fst_roots_threads_prepare_silts * )

note_silts_results = 0;









compare_fst_roots_lakes_stones

(




( that_fst_roots_threads_prepare_waters )

that_stones_names,




* (  * (  (


( that_fst_roots_threads_prepare_waters * * )

that_waters_lakes


)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 0 ),




( that_fst_roots_threads_prepare_waters )

note_silts_results




);









if

(


* ( that_fst_roots_threads_prepare_silts * )

note_silts_results == 1


)

{
















* that_waters_results



=



* (  * (  (


( that_fst_roots_threads_prepare_waters * * )

that_waters_lakes

)  + * ( that_fst_roots_threads_prepare_silts * ) note_silts_counts )  + 2 );
















* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts = 0;


free_fst_roots_lakes_waves ( & note_silts_counts );


note_silts_counts = that_fst_roots_lakes_prepare;









* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;


free_fst_roots_lakes_waves ( & note_silts_results );


note_silts_results = 0;
















return that_fst_roots_lakes_prepare;









}
















* ( that_fst_roots_threads_prepare_silts * )

note_silts_counts



=



* ( that_fst_roots_threads_prepare_silts * )

note_silts_counts + 1;









}

























* that_waters_results = that_fst_roots_lakes_prepare;
















* ( that_fst_roots_threads_prepare_silts * ) note_silts_counts = 0;


free_fst_roots_lakes_waves ( & note_silts_counts );


note_silts_counts = that_fst_roots_lakes_prepare;









* ( that_fst_roots_threads_prepare_silts * ) note_silts_results = 0;


free_fst_roots_lakes_waves ( & note_silts_results );


note_silts_results = that_fst_roots_lakes_prepare;
















return that_fst_roots_lakes_prepare;









}




#endif

